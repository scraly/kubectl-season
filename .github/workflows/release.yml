name: release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - id: get_version
        uses: battila7/get-version-action@v2
        run: echo ${{ steps.get_version.outputs.version-without-v }}
      - name: Build project
        run: |
          zip kubectl-season-${{ steps.get_version.outputs.version-without-v }.zip kubectl-season
         tar zcf kubectl-season-${{ steps.get_version.outputs.version-without-v }.tar.gz kubectl-season
      - name: shasum
        run: shasum -a 256 kubectl-season-${{ steps.get_version.outputs.version-without-v }.tar.gz > kubectl-season-${{ steps.get_version.outputs.version-without-v }.tar.gz.sha256
        shell: bash
      #- name: Create Release
      #  id: create_release
      #  uses: actions/create-release@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      #  with:
      #    tag_name: ${{ github.ref }}
      #    release_name: Release ${{ github.ref }}
      #    draft: false
      #    prerelease: false
      #- name: Upload Release Asset
      #  id: upload-release-asset 
      #  uses: actions/upload-release-asset@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      #  with:
      #    upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #    asset_path: ./my-artifact.zip
      #    asset_name: my-artifact.zip
      #    asset_content_type: application/zip
